CREATE TABLE CANDIDATE_LANGUAGE (
CDT_ID NUMBER(10),
LAN_ID NUMBER(10),
CONSTRAINT CANDIDATE_LANGUAGE_PK PRIMARY KEY(CDT_ID, LAN_ID)
);

CREATE TABLE LANGUAGE (
LAN_ID NUMBER(10),
LAN_LEVEL VARCHAR2(255 CHAR),
LAN_NAME VARCHAR2(255 CHAR),
CONSTRAINT LANGUAGE_PK PRIMARY KEY(LAN_ID)
);

CREATE TABLE SKILL (
SKI_ID NUMBER(10),
SKI_LEVEL VARCHAR2(255 CHAR),
SKI_NAME VARCHAR2(255 CHAR),
SKI_OTHERS VARCHAR2(255 CHAR),
CONSTRAINT SKILL_PK PRIMARY KEY(SKI_ID)
);

CREATE TABLE CANDIDATE_SKILL (
CDT_ID NUMBER(10),
SKI_ID NUMBER(10),
CONSTRAINT CANDIDATE_SKILL_PK PRIMARY KEY(CDT_ID, SKI_ID)
);

CREATE TABLE CANDIDATE_PROFILE (
CDT_ID NUMBER(10),
CDT_DT_BIRTH DATE,
CDT_CPF VARCHAR2(255 CHAR),
CDT_EMAIL VARCHAR2(255 CHAR),
CDT_FIRST_NAME VARCHAR2(255 CHAR),
CDT_GENDER VARCHAR2(255 CHAR),
CDT_JOINED DATE,
CDT_MARITAL VARCHAR2(255 CHAR),
CDT_MIDDLE_NAME VARCHAR2(255 CHAR),
CDT_MOBILE NUMBER(13),
CDT_PHONE NUMBER(13),
CDT_SURNAME VARCHAR2(255 CHAR),
ADRESS_ADR_ID NUMBER(10),
CONSTRAINT CANDIDATE_PROFILE_PK PRIMARY KEY(CDT_ID)
);

CREATE TABLE EXPERIENCE (
EXP_ID NUMBER(10),
EXP_ACHIEV VARCHAR2(255 CHAR),
EXP_CITY VARCHAR2(255 CHAR),
EXP_COMPANY VARCHAR2(255 CHAR),
EXP_END DATE,
EXP_START DATE,
EXP_TITLE VARCHAR2(255 CHAR),
CONSTRAINT EXPERIENCE_PK PRIMARY KEY(EXP_ID)
);

CREATE TABLE CANDIDATE_EXPERIENCE (
CDT_ID NUMBER(10),
EXP_ID NUMBER(10),
CONSTRAINT CANDIDATE_EXPERIENCE_PK PRIMARY KEY(CDT_ID, EXP_ID)
);

CREATE TABLE CANDIDATE_QUALIFICATION (
CDT_ID NUMBER(10),
QUA_ID NUMBER(10),
CONSTRAINT CANDIDATE_QUALIFICATION_PK PRIMARY KEY(CDT_ID, QUA_ID)
);

CREATE TABLE COMPANY (
CPY_ID NUMBER(10),
CPY_CNPJ VARCHAR2(255 CHAR),
CPY_NAME VARCHAR2(255 CHAR),
ADRESS_ADR_ID NUMBER(10),
CONSTRAINT COMPANY_PK PRIMARY KEY(CPY_ID)
);

CREATE TABLE ADRESS (
ADR_ID NUMBER(10),
ADR_CEP_PCZC VARCHAR2(255 CHAR),
ADR_CITY VARCHAR2(255 CHAR),
ADR_COUNTRY VARCHAR2(255 CHAR),
ADR_DETAIL VARCHAR2(255 CHAR),
ADR_HOOD VARCHAR2(255 CHAR),
ADR_LAT NUMBER(10),
ADR_LONG NUMBER(10),
ADR_NUM VARCHAR2(255 CHAR),
ADR_STATE VARCHAR2(255 CHAR),
ADR_ST_NAME VARCHAR2(255 CHAR),
CONSTRAINT ADRESS_PK PRIMARY KEY(ADR_ID)
);

CREATE TABLE QUALIFICATION (
QUA_ID NUMBER(10),
QUA_CORSE_PRG VARCHAR2(255 CHAR),
QUA_END DATE,
QUA_INSTITUTION VARCHAR2(255 CHAR),
QUA_LEVEL_DEGR VARCHAR2(255 CHAR),
QUA_NAME VARCHAR2(255 CHAR),
QUA_START DATE,
QUA_STATUS VARCHAR2(255 CHAR),
CONSTRAINT QUALIFICATION_PK PRIMARY KEY(QUA_ID)
);

CREATE TABLE VACANCY_SKILL (
VCY_ID NUMBER(10),
SKI_ID NUMBER(10),
CONSTRAINT VACANCY_SKILL_PK PRIMARY KEY(VCY_ID, SKI_ID)
);

CREATE TABLE VACANCY_LANGUAGE (
VCY_ID NUMBER(10),
LAN_ID NUMBER(10),
CONSTRAINT VACANCY_LANGUAGE_PK PRIMARY KEY(VCY_ID, LAN_ID)
);

CREATE TABLE USERJN (
ID_USER NUMBER(10),
EMAIL VARCHAR2(255 CHAR),
NAME VARCHAR2(255 CHAR),
CONSTRAINT USERJN_PK PRIMARY KEY(ID_USER)
);

CREATE TABLE BENEFITS (
BEN_ID NUMBER(10),
BEN_BEN VARCHAR2(255 CHAR),
CONSTRAINT BENEFITS_PK PRIMARY KEY(BEN_ID)
);

CREATE TABLE VACANCY_BENEFITS (
VCY_ID NUMBER(10),
BEN_ID NUMBER(10),
CONSTRAINT VACANCY_BENEFITS_PK PRIMARY KEY(VCY_ID, BEN_ID)
);

CREATE TABLE VACANCY (
VCY_ID NUMBER(10),
VCY_CLOSIN DATE,
VCY_CONTRACT NUMBER(10),
VCY_DESCRIPTION VARCHAR2(255 CHAR),
VCY_SAL_MAX FLOAT(126),
VCY_SAL_MIN FLOAT(126),
VCY_OPENN DATE,
VCY_TITLE VARCHAR2(255 CHAR),
ADRESS_ADR_ID NUMBER(10),
COMPANY_CPY_ID NUMBER(10),
ID_USER NUMBER(10),
CONSTRAINT VACANCY_PK PRIMARY KEY(VCY_ID)
);

select * from CANDIDATE_LANGUAGE;

alter table CANDIDATE_LANGUAGE
ADD CONSTRAINT FR_LAN_ID
FOREIGN KEY (LAN_ID)
REFERENCES LANGUAGE (LAN_ID);

DESCRIBE CANDIDATE_LANGUAGE;

alter table CANDIDATE_LANGUAGE
ADD CONSTRAINT FR_CTD_ID
FOREIGN KEY (CDT_ID)
REFERENCES CANDIDATE_PROFILE (CDT_ID);

alter table CANDIDATE_SKILL
ADD CONSTRAINT FR_SKI_ID
FOREIGN KEY (SKI_ID)
REFERENCES SKILL (SKI_ID);

alter table CANDIDATE_PROFILE
ADD CONSTRAINT FR_ADRESS_ADR_ID
FOREIGN KEY (ADRESS_ADR_ID)
REFERENCES ADRESS (ADR_ID);

alter table CANDIDATE_EXPERIENCE
ADD CONSTRAINT FR_CDT_ID
FOREIGN KEY (CDT_ID)
REFERENCES CANDIDATE_PROFILE (CDT_ID);

alter table CANDIDATE_EXPERIENCE
ADD CONSTRAINT FR_EXP_ID
FOREIGN KEY (EXP_ID)
REFERENCES EXPERIENCE (EXP_ID);

alter table CANDIDATE_QUALIFICATION
ADD CONSTRAINT FR_CDT_ID2
FOREIGN KEY (CDT_ID)
REFERENCES CANDIDATE_PROFILE (CDT_ID);

alter table CANDIDATE_QUALIFICATION
ADD CONSTRAINT FR_QUA_ID
FOREIGN KEY (QUA_ID)
REFERENCES QUALIFICATION (QUA_ID);

alter table COMPANY
ADD CONSTRAINT FR_ADRESS_ADR_ID2
FOREIGN KEY (ADRESS_ADR_ID)
REFERENCES ADRESS (ADR_ID);

alter table VACANCY_SKILL
ADD CONSTRAINT FR_VCY_ID
FOREIGN KEY (VCY_ID)
REFERENCES VACANCY (VCY_ID);

alter table VACANCY_SKILL
ADD CONSTRAINT FR_SKI_ID2
FOREIGN KEY (SKI_ID)
REFERENCES SKILL (SKI_ID);

alter table VACANCY_LANGUAGE
ADD CONSTRAINT FR_VCY_ID2
FOREIGN KEY (VCY_ID)
REFERENCES VACANCY (VCY_ID);

alter table VACANCY_LANGUAGE
ADD CONSTRAINT FR_LAN_ID2
FOREIGN KEY (LAN_ID)
REFERENCES LANGUAGE (LAN_ID);

alter table VACANCY_BENEFITS
ADD CONSTRAINT FR_VCY_ID3
FOREIGN KEY (VCY_ID)
REFERENCES VACANCY (VCY_ID);

alter table VACANCY_BENEFITS
ADD CONSTRAINT FR_BEN_ID
FOREIGN KEY (BEN_ID)
REFERENCES BENEFITS (BEN_ID);

alter table VACANCY
ADD CONSTRAINT FR_COMPANY_CPY_ID
FOREIGN KEY (COMPANY_CPY_ID)
REFERENCES COMPANY (CPY_ID);

alter table VACANCY
ADD CONSTRAINT FR_ID_USER
FOREIGN KEY (ID_USER)
REFERENCES USERJN (ID_USER);

alter table VACANCY
ADD CONSTRAINT FR_ADRESS_ADR_ID3
FOREIGN KEY (ADRESS_ADR_ID)
REFERENCES ADRESS (ADR_ID);

create sequence LAN_ID minvalue 1 start with 1 cache 10;

create sequence SKI_ID minvalue 1 start with 1 cache 10;

create sequence EXP_ID minvalue 1 start with 1 cache 10;

create sequence BEN_ID minvalue 1 start with 1 cache 10;

create sequence QUA_ID minvalue 1 start with 1 cache 10;

create sequence CDT_ID minvalue 1 start with 1 cache 10;

create sequence ADR_ID minvalue 1 start with 1 cache 10;

create sequence VCY_ID minvalue 1 start with 1 cache 10;

create sequence ID_USER minvalue 1 start with 1 cache 10;

create sequence CPY_ID minvalue 1 start with 1 cache 10;

select * from CANDIDATE_LANGUAGE;

//Exemplo de sintaxe de join
SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate
FROM Orders
INNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;

//Subselect onde o usuário seleciona a opção todos no filtro
SELECT * 
FROM CANDIDATE_PROFILE  
WHERE CDT_FIRST_NAME = ( SELECT QUA_LEVEL_DEGR from QUALIFICATION WHERE QUA_LEVEL_DEGR = 'Ensino Médio' OR 'Ensino Técnico' OR 'Ensino Superior');  

select * from USERJN;

//Dois subselects na mesma consulta
SELECT * 
FROM CANDIDATE_PROFILE  
WHERE CDT_FIRST_NAME = ( SELECT QUA_LEVEL_DEGR from QUALIFICATION WHERE QUA_LEVEL_DEGR = 'Ensino Médio' AND SELECT LAN_NAME from LANGUAGE WHERE LAN_NAME = 'Inglês');